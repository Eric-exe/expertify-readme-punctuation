schema {
    query: Query
    mutation: Mutation
}

type BlogEntry {
    id: ID!
    pub_name: String!
    pub_url: String
    title: String!
    is_content: Boolean!
    pub_date: String!
    text: String!
    url: String!
    author: String!
}

type BlogEntryResult {
    success: Boolean!
    errors: [String]
    entries: BlogEntry
}

type BlogEntriesResult {
    success: Boolean!
    errors: [String]
    entries: [BlogEntry]
}

type User {
    id: ID!
    email: String!
    password: String!
}

type UserResult {
    success: Boolean!
    errors: [String]
    user: User
 }

type SignInResponse {
    token: String
    errors: [String]
}

type SignUpResponse {
    token: String
    errors: [String]
}


type Query {
    entries: BlogEntriesResult
    pub_entries(url: String!): BlogEntriesResult
    personal_entries(token: String!): BlogEntriesResult
    blogEntry(entryId: ID!): BlogEntryResult!
    user(email: String!, password: String!): UserResult
    users: [User]
}

type DeleteEntryResult {
    success: Boolean!
    errors: [String]
}

type Mutation {
    createBlogEntry(url: String!): BlogEntryResult!
    createPersonalEntry(url: String!, token: String!): BlogEntryResult!
    deleteBlogEntry(entryId: ID!): DeleteEntryResult!
    signUp(email: String!, password: String!): SignUpResponse
    signIn(email: String!, password: String!): SignInResponse
}